{"ast":null,"code":"var _jsxFileName = \"/home/amishk800/meetup_app/my-app/src/components/Functions/SignUpForm.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from \"react\";\nimport useInput from \"../../Hooks/useInput\";\nimport classes from \"./SignUpForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUpForm = props => {\n  _s();\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputError,\n    valueChangeHandler: nameChangeHandler,\n    isTouchHandler: nameBlurHandler,\n    reset: resetName\n  } = useInput(value => value.trim() !== \"\");\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputError,\n    valueChangeHandler: emailChangeHandler,\n    isTouchHandler: emailBlurHandler,\n    reset: resetEmail\n  } = useInput(value => value.includes('@'));\n  const {\n    value: enteredPassword,\n    isValid: enteredPasswordIsValid,\n    hasError: passwordInputError,\n    valueChangeHandler: passwordChangeHandler,\n    isTouchHandler: passwordBlurHandler,\n    reset: restPassword\n  } = useInput(value => value.trim() !== \"\" && value.length > 6);\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    resetName();\n  };\n  // const nameInputClass = \"\";\n\n  // useEffect(() => {\n\n  // });\n  const nameInputClass = nameInputError ? classes.invalid : \"\";\n  const emailInputClass = emailInputError ? classes.invalid : \"\";\n  const passwordInputClass = passwordInputError ? classes.invalid : \"\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form_element,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \" Enter your Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: nameInputClass,\n          type: \"name\",\n          id: \"name\",\n          name: \"name\",\n          placeholder: \"John Smith\",\n          value: enteredName,\n          onChange: nameChangeHandler,\n          onBlur: nameBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), nameInputError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.error_text,\n        children: \"Name can not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form_element,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \" Enter your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: emailInputClass,\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          placeholder: \"John@gmail.com\",\n          value: enteredEmail,\n          onChange: emailChangeHandler,\n          onBlur: emailBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), emailInputError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.error_text,\n          children: \"Email can not be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form_element,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \" Enter your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          placeholder: \"your@password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: passwordBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), passwordInputError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.error_text,\n        children: \"Email can not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.btn_round,\n        type: \"submit\",\n        children: \"Sumbit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(SignUpForm, \"KaYlgqefn72Kimtz/Avb5Jil74o=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n_c = SignUpForm;\nexport default SignUpForm;\nvar _c;\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"names":["useState","useRef","useEffect","useInput","classes","jsxDEV","_jsxDEV","SignUpForm","props","_s","value","enteredName","isValid","enteredNameIsValid","hasError","nameInputError","valueChangeHandler","nameChangeHandler","isTouchHandler","nameBlurHandler","reset","resetName","trim","enteredEmail","enteredEmailIsValid","emailInputError","emailChangeHandler","emailBlurHandler","resetEmail","includes","enteredPassword","enteredPasswordIsValid","passwordInputError","passwordChangeHandler","passwordBlurHandler","restPassword","length","formSubmitHandler","event","preventDefault","nameInputClass","invalid","emailInputClass","passwordInputClass","className","container","children","onSubmit","form_element","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","placeholder","onChange","onBlur","error_text","btn_round","_c","$RefreshReg$"],"sources":["/home/amishk800/meetup_app/my-app/src/components/Functions/SignUpForm.js"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport useInput from \"../../Hooks/useInput\";\nimport classes from \"./SignUpForm.module.css\";\n\nconst SignUpForm = (props) => {\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputError,\n    valueChangeHandler: nameChangeHandler,\n    isTouchHandler: nameBlurHandler,\n    reset: resetName,\n  } = useInput((value) => value.trim() !== \"\");\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputError,\n    valueChangeHandler: emailChangeHandler,\n    isTouchHandler: emailBlurHandler,\n    reset: resetEmail,\n  } = useInput((value) => value.includes('@'));\n\n  const {\n    value: enteredPassword,\n    isValid: enteredPasswordIsValid,\n    hasError: passwordInputError,\n    valueChangeHandler: passwordChangeHandler,\n    isTouchHandler: passwordBlurHandler,\n    reset: restPassword,\n  } = useInput((value) => (value.trim() !== \"\" && (value.length>6)));\n\n\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    resetName();\n  };\n  // const nameInputClass = \"\";\n\n  // useEffect(() => {\n    \n  // });\n  const nameInputClass = nameInputError ? classes.invalid : \"\";\n  const emailInputClass = emailInputError ? classes.invalid : \"\";\n  const passwordInputClass = passwordInputError ? classes.invalid : \"\";\n  return (\n    <div className={classes.container}>\n      <form onSubmit={formSubmitHandler}>\n        <div className={classes.form_element}>\n          <label htmlFor=\"name\"> Enter your Name</label>\n          <input\n            className={nameInputClass}\n            type=\"name\"\n            id=\"name\"\n            name=\"name\"\n            placeholder=\"John Smith\"\n            value={enteredName}\n            onChange={nameChangeHandler}\n            onBlur={nameBlurHandler}\n          />\n        </div>\n        {nameInputError && (\n          <p className={classes.error_text}>Name can not be empty</p>\n        )}\n        <div className={classes.form_element}>\n          <label htmlFor=\"email\"> Enter your Email</label>\n          <input\n            className={emailInputClass}\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"John@gmail.com\"\n            value={enteredEmail}\n            onChange={emailChangeHandler}\n            onBlur={emailBlurHandler}\n          />\n          {emailInputError && (\n            <p className={classes.error_text}>Email can not be empty</p>\n          )}\n        </div>\n        <div className={classes.form_element}>\n          <label htmlFor=\"password\"> Enter your Password</label>\n          <input\n            \n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"your@password\"\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n            onBlur={passwordBlurHandler}\n          />\n        </div>\n        {passwordInputError && (\n          <p className={classes.error_text}>Email can not be empty</p>\n        )}\n        <button className={classes.btn_round} type=\"submit\">\n          Sumbit\n        </button>\n      </form>\n    </div>\n  );\n};\nexport default SignUpForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}