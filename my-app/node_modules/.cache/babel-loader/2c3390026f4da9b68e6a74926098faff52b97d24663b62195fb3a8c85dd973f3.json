{"ast":null,"code":"var _jsxFileName = \"/home/amishk800/meetup_app/my-app/src/components/Functions/SignUpForm.js\",\n  _s2 = $RefreshSig$();\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport useInput from \"../../Hooks/useInput\";\nimport classes from \"./SignUpForm.module.css\";\nimport { loginActions } from \"../../Store/loginSlice\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUpForm = props => {\n  _s2();\n  var _s = $RefreshSig$();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputError,\n    valueChangeHandler: nameChangeHandler,\n    isTouchHandler: nameBlurHandler,\n    reset: resetName\n  } = useInput(value => value.trim() !== \"\");\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputError,\n    valueChangeHandler: emailChangeHandler,\n    isTouchHandler: emailBlurHandler,\n    reset: resetEmail\n  } = useInput(value => value.includes(\"@\"));\n  const {\n    value: enteredPassword,\n    isValid: enteredPasswordIsValid,\n    hasError: passwordInputError,\n    valueChangeHandler: passwordChangeHandler,\n    isTouchHandler: passwordBlurHandler,\n    reset: resetPassword\n  } = useInput(value => value.trim() !== \"\" && value.length > 6);\n  const formSubmitHandler = event => {\n    _s();\n    event.preventDefault();\n    const url = `/api/add-product`;\n    useEffect(() => {\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          enteredName,\n          enteredPassword,\n          enteredEmail\n        })\n      }).then(r => r.json()).then(data => console.log(data));\n    });\n    dispatch(loginActions.login());\n    navigate('/home');\n    resetName();\n    resetEmail();\n    resetPassword();\n  };\n  _s(formSubmitHandler, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  const nameInputClass = nameInputError ? classes.invalid : \"\";\n  const emailInputClass = emailInputError ? classes.invalid : \"\";\n  const passwordInputClass = passwordInputError ? classes.invalid : \"\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form_element,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \" Enter your Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: nameInputClass,\n          type: \"name\",\n          id: \"name\",\n          name: \"name\",\n          placeholder: \"John Smith\",\n          value: enteredName,\n          onChange: nameChangeHandler,\n          onBlur: nameBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), nameInputError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.error_text,\n        children: \"Name can not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form_element,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \" Enter your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: emailInputClass,\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          placeholder: \"John@gmail.com\",\n          value: enteredEmail,\n          onChange: emailChangeHandler,\n          onBlur: emailBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), emailInputError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.error_text,\n          children: \"Email can not be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form_element,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \" Enter your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: passwordInputClass,\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          placeholder: \"your@password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: passwordBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), passwordInputError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.error_text,\n          children: \"Email can not be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.btn_round,\n        type: \"submit\",\n        children: \"Sumbit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s2(SignUpForm, \"ooL47AmgABi+iE5Tl7W0KR+LTdM=\", false, function () {\n  return [useDispatch, useNavigate, useInput, useInput, useInput];\n});\n_c = SignUpForm;\nexport default SignUpForm;\nvar _c;\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"names":["useSelector","useDispatch","useNavigate","useInput","classes","loginActions","useEffect","jsxDEV","_jsxDEV","SignUpForm","props","_s2","_s","$RefreshSig$","dispatch","navigate","value","enteredName","isValid","enteredNameIsValid","hasError","nameInputError","valueChangeHandler","nameChangeHandler","isTouchHandler","nameBlurHandler","reset","resetName","trim","enteredEmail","enteredEmailIsValid","emailInputError","emailChangeHandler","emailBlurHandler","resetEmail","includes","enteredPassword","enteredPasswordIsValid","passwordInputError","passwordChangeHandler","passwordBlurHandler","resetPassword","length","formSubmitHandler","event","preventDefault","url","fetch","method","headers","body","JSON","stringify","then","r","json","data","console","log","login","nameInputClass","invalid","emailInputClass","passwordInputClass","className","container","children","onSubmit","form_element","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","placeholder","onChange","onBlur","error_text","btn_round","_c","$RefreshReg$"],"sources":["/home/amishk800/meetup_app/my-app/src/components/Functions/SignUpForm.js"],"sourcesContent":["import { useSelector, useDispatch } from \"react-redux\"; \nimport { useNavigate } from \"react-router-dom\";\nimport useInput from \"../../Hooks/useInput\";\nimport classes from \"./SignUpForm.module.css\";\nimport { loginActions } from \"../../Store/loginSlice\";\nimport { useEffect } from \"react\";\n\nconst SignUpForm = (props) => {\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputError,\n    valueChangeHandler: nameChangeHandler,\n    isTouchHandler: nameBlurHandler,\n    reset: resetName,\n  } = useInput((value) => value.trim() !== \"\");\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputError,\n    valueChangeHandler: emailChangeHandler,\n    isTouchHandler: emailBlurHandler,\n    reset: resetEmail,\n  } = useInput((value) => value.includes(\"@\"));\n\n  const {\n    value: enteredPassword,\n    isValid: enteredPasswordIsValid,\n    hasError: passwordInputError,\n    valueChangeHandler: passwordChangeHandler,\n    isTouchHandler: passwordBlurHandler,\n    reset: resetPassword,\n  } = useInput((value) => value.trim() !== \"\" && value.length > 6);\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n\n    const url = `/api/add-product`;\n    useEffect(() => {\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ enteredName, enteredPassword, enteredEmail }),\n      })\n        .then((r) => r.json())\n        .then((data) => console.log(data));\n\n    })\n    \n    dispatch(loginActions.login());\n    navigate('/home');\n    resetName();\n    resetEmail();\n    resetPassword();\n  };\n \n  const nameInputClass = nameInputError ? classes.invalid : \"\";\n  const emailInputClass = emailInputError ? classes.invalid : \"\";\n  const passwordInputClass = passwordInputError ? classes.invalid : \"\";\n  return (\n    <div className={classes.container}>\n      <form onSubmit={formSubmitHandler}>\n        <div className={classes.form_element}>\n          <label htmlFor=\"name\"> Enter your Name</label>\n          <input\n            className={nameInputClass}\n            type=\"name\"\n            id=\"name\"\n            name=\"name\"\n            placeholder=\"John Smith\"\n            value={enteredName}\n            onChange={nameChangeHandler}\n            onBlur={nameBlurHandler}\n          />\n        </div>\n        {nameInputError && (\n          <p className={classes.error_text}>Name can not be empty</p>\n        )}\n\n        <div className={classes.form_element}>\n          <label htmlFor=\"email\"> Enter your Email</label>\n          <input\n            className={emailInputClass}\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"John@gmail.com\"\n            value={enteredEmail}\n            onChange={emailChangeHandler}\n            onBlur={emailBlurHandler}\n          />\n          {emailInputError && (\n            <p className={classes.error_text}>Email can not be empty</p>\n          )}\n        </div>\n        <div className={classes.form_element}>\n          <label htmlFor=\"password\"> Enter your Password</label>\n          <input\n            className={passwordInputClass}\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"your@password\"\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n            onBlur={passwordBlurHandler}\n          />\n          {passwordInputError && (\n            <p className={classes.error_text}>Email can not be empty</p>\n          )}\n        </div>\n\n        <button className={classes.btn_round} type=\"submit\">\n          Sumbit\n        </button>\n      </form>\n    </div>\n  );\n};\nexport default SignUpForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}